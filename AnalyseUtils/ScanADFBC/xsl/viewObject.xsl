<?xml version="1.0" encoding="UTF-8" ?>
<xsl:stylesheet version="1.0" xmlns:ns0="http://xmlns.oracle.com/bc4j"
                xmlns:oracle-xsl-mapper="http://www.oracle.com/xsl/mapper/schemas"
                xmlns:oraxsl="http://www.oracle.com/XSL/Transform/java"
                xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema"
                xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
                exclude-result-prefixes="oracle-xsl-mapper xsi xsd xsl ns0 oraxsl">
  <oracle-xsl-mapper:schema>
    <!--SPECIFICATION OF MAP SOURCES AND TARGETS, DO NOT MODIFY.-->
    <oracle-xsl-mapper:mapSources>
      <oracle-xsl-mapper:source type="XSD">
        <oracle-xsl-mapper:schema location="../xsd/viewObject.xsd"/>
        <oracle-xsl-mapper:rootElement name="ViewObject" namespace="http://xmlns.oracle.com/bc4j"/>
      </oracle-xsl-mapper:source>
    </oracle-xsl-mapper:mapSources>
    <oracle-xsl-mapper:mapTargets>
      <oracle-xsl-mapper:target type="XSD">
        <oracle-xsl-mapper:schema location="../xsd/viewObjectProps.xsd"/>
        <oracle-xsl-mapper:rootElement name="viewObject"/>
      </oracle-xsl-mapper:target>
    </oracle-xsl-mapper:mapTargets>
    <!--GENERATED BY ORACLE XSL MAPPER 12.2.1.4.0(XSLT Build 190828.0353.3300) AT [TUE JUN 27 17:35:37 CEST 2023].-->
  </oracle-xsl-mapper:schema>
  <!--User Editing allowed BELOW this line - DO NOT DELETE THIS LINE-->
  <xsl:template match="/">
    <viewObject name="{/ns0:ViewObject/@Name}" version="{/ns0:ViewObject/@Version}">
      <xsl:if test="/ns0:ViewObject/@InheritPersonalization">
        <xsl:attribute name="InheritPersonalization">
          <xsl:value-of select="/ns0:ViewObject/@InheritPersonalization"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@SelectListFlags">
        <xsl:attribute name="SelectListFlags">
          <xsl:value-of select="/ns0:ViewObject/@SelectListFlags"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@FromListFlags">
        <xsl:attribute name="FromListFlags">
          <xsl:value-of select="/ns0:ViewObject/@FromListFlags"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@WhereFlags">
        <xsl:attribute name="WhereFlags">
          <xsl:value-of select="/ns0:ViewObject/@WhereFlags"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@BindingStyle">
        <xsl:attribute name="BindingStyle">
          <xsl:value-of select="/ns0:ViewObject/@BindingStyle"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@CustomQuery">
        <xsl:attribute name="CustomQuery">
          <xsl:value-of select="/ns0:ViewObject/@CustomQuery"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@SelectAllAttributes">
        <xsl:attribute name="SelectAllAttributes">
          <xsl:value-of select="/ns0:ViewObject/@SelectAllAttributes"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@PageIterMode">
        <xsl:attribute name="PageIterMode">
          <xsl:value-of select="/ns0:ViewObject/@PageIterMode"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@RowClass">
        <xsl:attribute name="RowClass">
          <xsl:value-of select="/ns0:ViewObject/@RowClass"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:if test="/ns0:ViewObject/@SelectList">
        <xsl:attribute name="SelectList">
          <xsl:value-of select="/ns0:ViewObject/@SelectList"/>
        </xsl:attribute>
      </xsl:if>
      <xsl:attribute name="FromList">
        <xsl:value-of select="/ns0:ViewObject/@FromList"/>
      </xsl:attribute>
      <xsl:if test="/ns0:ViewObject/@Where">
        <xsl:attribute name="Where">
          <xsl:value-of select="/ns0:ViewObject/@Where"/>
        </xsl:attribute>
      </xsl:if>
      <SQLQuery>
        <xsl:value-of select="/ns0:ViewObject/ns0:SQLQuery"/>
      </SQLQuery>
      <entityUsage>
        <xsl:attribute name="Name">
          <xsl:value-of select="/ns0:ViewObject/ns0:EntityUsage/@Name"/>
        </xsl:attribute>
        <xsl:attribute name="Entity">
          <xsl:value-of select="/ns0:ViewObject/ns0:EntityUsage/@Entity"/>
        </xsl:attribute>
      </entityUsage>
      <viewAttributeList>
        <xsl:call-template name="loopViewAttributesForList">
          <xsl:with-param name="viewobject" select="/ns0:ViewObject"/>
        </xsl:call-template>
      </viewAttributeList>
    </viewObject>
  </xsl:template>
  <xsl:template name="loopViewAttributesForList">
    <xsl:param name="viewobject"/>
    <xsl:param name="index" select="1"/>
    <xsl:param name="partialList" select="''"/>
    <xsl:choose>
      <xsl:when test="number($index) &lt;= count($viewobject/ns0:ViewAttribute)">
        <xsl:variable name="attributeName">
          <xsl:choose>
            <xsl:when test="string-length($viewobject/ns0:ViewAttribute[$index]/@EntityAttrName)>0">
              <xsl:value-of select="$viewobject/ns0:ViewAttribute[$index]/@EntityAttrName"/>
            </xsl:when>
            <xsl:otherwise>
              <xsl:value-of select="$viewobject/ns0:ViewAttribute[$index]/@AliasName"/>
            </xsl:otherwise>
          </xsl:choose>
        </xsl:variable>
        <xsl:choose>
          <xsl:when test="number($index)=1">
            <xsl:call-template name="loopViewAttributesForList">
              <xsl:with-param name="viewobject" select="$viewobject"/>
              <xsl:with-param name="index" select="$index+1"/>
              <xsl:with-param name="partialList" select="$attributeName"/>
            </xsl:call-template>
          </xsl:when>
          <xsl:otherwise>
            <xsl:call-template name="loopViewAttributesForList">
              <xsl:with-param name="viewobject" select="$viewobject"/>
              <xsl:with-param name="index" select="$index+1"/>
              <xsl:with-param name="partialList" select="concat($partialList,',',$attributeName)"/>
            </xsl:call-template>
          </xsl:otherwise>
        </xsl:choose>
      </xsl:when>
      <xsl:otherwise>
        <xsl:value-of select="$partialList"/>
      </xsl:otherwise>
    </xsl:choose>
  </xsl:template>
</xsl:stylesheet>
